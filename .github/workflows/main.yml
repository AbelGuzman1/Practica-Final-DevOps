# Nombre del flujo de trabajo
name: CI/CD Pipeline

# El flujo de trabajo se dispara en un push a la rama main
on:
  push:
    branches:
      - main

# Define los trabajos a ejecutar
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del c\u00f3digo
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar Node.js
      # Instala una versi\u00f3n espec\u00edfica de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar las pruebas unitarias
      - name: Run unit tests
        run: npm test

      # Paso 5: Autenticarse en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 6: Construir y subir la imagen de Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/practica-final-devops:latest

      # Paso 7: Desplegar en Render
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
